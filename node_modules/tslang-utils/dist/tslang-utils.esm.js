/**
 * Determines whether value is defined?
 */
function isDef(val) {
  return val !== undefined && val !== null;
}
/**
 * Determines whether value is Function type?
 */

function isFunc(val) {
  return typeof val === 'function';
}
/**
 * Determines whether value is string type
 */

function isString(val) {
  return typeof val === 'string';
}
/**
 * Determines whether value is number type?
 * @param val any value type
 * @param strict whether we should ignore `NaN` from number type? default: false
 */

function isNumber(val, strict) {
  if (strict === void 0) {
    strict = false;
  }

  return strict ? isStrictNumber(val) : typeof val === 'number';
}
/**
 * Determines whether value is strict number(exclude NaN)?
 */

function isStrictNumber(val) {
  return isNumber(val) && !isNaN(val);
}
var _hasOwnProp = Object.prototype.hasOwnProperty;
/**
 * Determines whether an object has a property with the specified name.
 */

function hasOwnProp(val, key) {
  return _hasOwnProp.call(val, key);
}

/**
 * whether current environment is server(node.js) runtime?
 */
function isServer() {
  return typeof global !== 'undefined';
}
/**
 * whether current environment is browser runtime?
 */

function isBrowser() {
  return typeof window !== 'undefined' && typeof document !== 'undefined';
}

export { hasOwnProp, isBrowser, isDef, isFunc, isNumber, isServer, isStrictNumber, isString };
//# sourceMappingURL=tslang-utils.esm.js.map
