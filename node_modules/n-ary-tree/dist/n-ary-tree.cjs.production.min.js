"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("tslang-utils");function e(e){return function(n,i,o){var t=void 0===o?{}:o,u=t.value,a=void 0===u?"value":u,v=t.children,d=void 0===v?"children":v,l=[],f=[];return function n(o){o&&(l.push(o),r.isDef(o[a])&&o[a]===i&&(f=e(l,f)),Array.isArray(o[d])&&o[d].forEach(n),l.pop())}(n),f}}function n(e,n){var i=void 0===n?{}:n,o=i.value,t=void 0===o?"value":o,u=i.children,a=void 0===u?"children":u,v=[];if(!r.isDef(e))return v;for(var d=[e];d.length>0;){var l=d.length;v.push([]);for(var f=0;f<l;f++){var s=d.shift();v[v.length-1].push(s[t]);var c=s[a];Array.isArray(c)&&d.push.apply(d,c)}}return v}exports.bfs=n,exports.findAllPaths=function(r,n,i){return void 0===i&&(i={}),e((function(r,e){return e.concat([[].concat(r)])}))(r,n,i)},exports.findNodes=function(r,e,n){var i=void 0===n?{}:n,o=i.value,t=void 0===o?"value":o,u=i.children,a=void 0===u?"children":u,v=[],d=[];return r?(function r(n){if(n){var i=e.indexOf(n[t]);i>-1&&(v[i]=n[t],d[i]=n),Array.isArray(n[a])&&n[a].length>0&&n[a].forEach(r)}}(r),{nodes:d,values:v}):{nodes:d,values:v}},exports.findPath=function(r,n,i){return void 0===i&&(i={}),e((function(r){return[].concat(r)}))(r,n,i)},exports.findPathNodes=function(r,e,n){var i=void 0===n?{}:n,o=i.value,t=void 0===o?"value":o,u=i.children,a=void 0===u?"children":u,v=[];if(!r)return v;for(var d=[r],l=-1;d.length>0;){var f=d.length;l++;for(var s=0;s<f;s++){var c=d.shift();if(c[t]===e[l]){v.push(c),l<e.length-1&&d.push.apply(d,c[a]||[]);break}}}return v},exports.levelorder=n,exports.postorder=function(e,n){var i=void 0===n?{}:n,o=i.value,t=void 0===o?"value":o,u=i.children,a=void 0===u?"children":u,v=[];return r.isDef(e)?(function e(n,i){r.isDef(n)&&(Array.isArray(n[a])&&n[a].length>0&&n[a].forEach((function(r){return e(r,i)})),i.push(n[t]))}(e,v),v):v},exports.preorder=function(e,n){var i=void 0===n?{}:n,o=i.value,t=void 0===o?"value":o,u=i.children,a=void 0===u?"children":u,v=[];return r.isDef(e)?(function e(n,i){r.isDef(n)&&(i.push(n[t]),Array.isArray(n[a])&&n[a].length>0&&n[a].forEach((function(r){return e(r,i)})))}(e,v),v):v};
//# sourceMappingURL=n-ary-tree.cjs.production.min.js.map
